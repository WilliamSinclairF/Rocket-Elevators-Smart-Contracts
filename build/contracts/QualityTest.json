{
  "contractName": "QualityTest",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "buildings",
      "outputs": [
        {
          "internalType": "int256",
          "name": "id",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "buildingAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "operatingPermit",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "conformityCertificate",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "floorServed",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "elevatorDoorTest",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "elevatorCableTest",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "elevatorBreakTest",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "employee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "int256",
          "name": "_id",
          "type": "int256"
        },
        {
          "internalType": "bool",
          "name": "isTestPassed",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_operatingPermit",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_conformityCertificate",
          "type": "string"
        }
      ],
      "name": "createContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "int256",
          "name": "_id",
          "type": "int256"
        }
      ],
      "name": "getBuilding",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "id",
              "type": "int256"
            },
            {
              "internalType": "string",
              "name": "buildingAddress",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "operatingPermit",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "conformityCertificate",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "floorServed",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "elevatorDoorTest",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "elevatorCableTest",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "elevatorBreakTest",
              "type": "string"
            }
          ],
          "internalType": "struct QualityTest.Building",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"buildings\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"id\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"buildingAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"operatingPermit\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"conformityCertificate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"floorServed\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"elevatorDoorTest\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"elevatorCableTest\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"elevatorBreakTest\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_id\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"isTestPassed\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"_operatingPermit\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_conformityCertificate\",\"type\":\"string\"}],\"name\":\"createContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"employee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_id\",\"type\":\"int256\"}],\"name\":\"getBuilding\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"id\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"buildingAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"operatingPermit\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"conformityCertificate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"floorServed\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"elevatorDoorTest\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"elevatorCableTest\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"elevatorBreakTest\",\"type\":\"string\"}],\"internalType\":\"struct QualityTest.Building\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/ricol/Documents/repo codeboxx/week-12/team-project/Rocket_Elevators_Smart_Contracts/contracts/QualityTest.sol\":\"QualityTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/ricol/Documents/repo codeboxx/week-12/team-project/Rocket_Elevators_Smart_Contracts/contracts/QualityTest.sol\":{\"keccak256\":\"0x6e60e9dcda1044eaa8a6969a4cff0b98c961d67591e92d13b4db30c5475ee82b\",\"urls\":[\"bzz-raw://5b29dbbad1b5b745310b2ea68ca84de6829e26878851485ea8a012be55249afc\",\"dweb:/ipfs/QmWycXodaqJg9AKZkEciyJARUxD8mhJUrqMnVR8gmMGLB3\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806342f7bd7514610051578063472570ab14610081578063616b8af1146100b1578063ca0932b4146100cd575b600080fd5b61006b60048036036100669190810190610d89565b610104565b6040516100789190610fbe565b60405180910390f35b61009b60048036036100969190810190610d89565b610137565b6040516100a89190611088565b60405180910390f35b6100cb60048036036100c69190810190610db2565b6105dd565b005b6100e760048036036100e29190810190610d89565b6107b1565b6040516100fb989796959493929190610fd9565b60405180910390f35b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61013f610c21565b600160008381526020019081526020016000206040518061010001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102015780601f106101d657610100808354040283529160200191610201565b820191906000526020600020905b8154815290600101906020018083116101e457829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102a35780601f10610278576101008083540402835291602001916102a3565b820191906000526020600020905b81548152906001019060200180831161028657829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b50505050508152602001600582018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104895780601f1061045e57610100808354040283529160200191610489565b820191906000526020600020905b81548152906001019060200180831161046c57829003601f168201915b50505050508152602001600682018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b50505050508152602001600782018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b5050505050815250509050919050565b3360008086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160008681526020019081526020016000206002019080519060200190610658929190610c66565b5080600160008681526020019081526020016000206003019080519060200190610683929190610c66565b5082156107ab576040518060400160405280600681526020017f50617373656400000000000000000000000000000000000000000000000000008152506001600086815260200190815260200160002060010190805190602001906106e9929190610c66565b506040518060400160405280600681526020017f5061737365640000000000000000000000000000000000000000000000000000815250600160008681526020019081526020016000206002019080519060200190610749929190610c66565b506040518060400160405280600681526020017f50617373656400000000000000000000000000000000000000000000000000008152506001600086815260200190815260200160002060070190805190602001906107a9929190610c66565b505b50505050565b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108635780601f1061083857610100808354040283529160200191610863565b820191906000526020600020905b81548152906001019060200180831161084657829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109015780601f106108d657610100808354040283529160200191610901565b820191906000526020600020905b8154815290600101906020018083116108e457829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561099f5780601f106109745761010080835404028352916020019161099f565b820191906000526020600020905b81548152906001019060200180831161098257829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a3d5780601f10610a1257610100808354040283529160200191610a3d565b820191906000526020600020905b815481529060010190602001808311610a2057829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610adb5780601f10610ab057610100808354040283529160200191610adb565b820191906000526020600020905b815481529060010190602001808311610abe57829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b795780601f10610b4e57610100808354040283529160200191610b79565b820191906000526020600020905b815481529060010190602001808311610b5c57829003601f168201915b505050505090806007018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c175780601f10610bec57610100808354040283529160200191610c17565b820191906000526020600020905b815481529060010190602001808311610bfa57829003601f168201915b5050505050905088565b60405180610100016040528060008152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ca757805160ff1916838001178555610cd5565b82800160010185558215610cd5579182015b82811115610cd4578251825591602001919060010190610cb9565b5b509050610ce29190610ce6565b5090565b610d0891905b80821115610d04576000816000905550600101610cec565b5090565b90565b600081359050610d1a816111cb565b92915050565b600081359050610d2f816111e2565b92915050565b600082601f830112610d4657600080fd5b8135610d59610d54826110d7565b6110aa565b91508082526020830160208301858383011115610d7557600080fd5b610d80838284611178565b50505092915050565b600060208284031215610d9b57600080fd5b6000610da984828501610d20565b91505092915050565b60008060008060808587031215610dc857600080fd5b6000610dd687828801610d20565b9450506020610de787828801610d0b565b935050604085013567ffffffffffffffff811115610e0457600080fd5b610e1087828801610d35565b925050606085013567ffffffffffffffff811115610e2d57600080fd5b610e3987828801610d35565b91505092959194509250565b610e4e81611130565b82525050565b610e5d8161114e565b82525050565b610e6c8161114e565b82525050565b6000610e7d82611103565b610e87818561110e565b9350610e97818560208601611187565b610ea0816111ba565b840191505092915050565b6000610eb682611103565b610ec0818561111f565b9350610ed0818560208601611187565b610ed9816111ba565b840191505092915050565b600061010083016000830151610efd6000860182610e54565b5060208301518482036020860152610f158282610e72565b91505060408301518482036040860152610f2f8282610e72565b91505060608301518482036060860152610f498282610e72565b91505060808301518482036080860152610f638282610e72565b91505060a083015184820360a0860152610f7d8282610e72565b91505060c083015184820360c0860152610f978282610e72565b91505060e083015184820360e0860152610fb18282610e72565b9150508091505092915050565b6000602082019050610fd36000830184610e45565b92915050565b600061010082019050610fef600083018b610e63565b8181036020830152611001818a610eab565b905081810360408301526110158189610eab565b905081810360608301526110298188610eab565b9050818103608083015261103d8187610eab565b905081810360a08301526110518186610eab565b905081810360c08301526110658185610eab565b905081810360e08301526110798184610eab565b90509998505050505050505050565b600060208201905081810360008301526110a28184610ee4565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156110cd57600080fd5b8060405250919050565b600067ffffffffffffffff8211156110ee57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061113b82611158565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156111a557808201518184015260208101905061118a565b838111156111b4576000848401525b50505050565b6000601f19601f8301169050919050565b6111d481611142565b81146111df57600080fd5b50565b6111eb8161114e565b81146111f657600080fd5b5056fea365627a7a72315820da3f9b9bd19a661d9b9342d703987b2ae69a846d05b9c772179e9c13dc697e7a6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "71:2219:3:-;;;626:429;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:429:3;673:374;;;;;;;;701:1;673:374;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:9;:12;668:1;658:12;;;;;;;;;;;:389;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;71:2219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "71:2219:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;71:2219:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2179:108;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1653:518;;;;;;;;;;;;;;;;:::i;:::-;;576:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;530:39;;;;;;;;;;;;;;;;;;;;;;:::o;2179:108::-;2230:15;;:::io;1653:518::-;1809:10;1793:8;:13;1802:3;1793:13;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1863:16;1830:9;:14;1840:3;1830:14;;;;;;;;;;;:30;;:49;;;;;;;;;;;;:::i;:::-;;1929:22;1890:9;:14;1900:3;1890:14;;;;;;;;;;;:36;;:61;;;;;;;;;;;;:::i;:::-;;1968:12;1964:200;;;1997:41;;;;;;;;;;;;;;;;;:9;:14;2007:3;1997:14;;;;;;;;;;;:30;;:41;;;;;;;;;;;;:::i;:::-;;2053;;;;;;;;;;;;;;;;;:9;:14;2063:3;2053:14;;;;;;;;;;;:30;;:41;;;;;;;;;;;;:::i;:::-;;2109:43;;;;;;;;;;;;;;;;;:9;:14;2119:3;2109:14;;;;;;;;;;;:32;;:43;;;;;;;;;;;;:::i;:::-;;1964:200;1653:518;;;;:::oo;71:2219::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:124:-1:-;;82:6;69:20;60:29;;94:30;118:5;94:30;;;54:75;;;;;136:128;;215:6;202:20;193:29;;227:32;253:5;227:32;;;187:77;;;;;272:442;;374:3;367:4;359:6;355:17;351:27;341:2;;392:1;389;382:12;341:2;429:6;416:20;451:65;466:49;508:6;466:49;;;451:65;;;442:74;;536:6;529:5;522:21;572:4;564:6;560:17;605:4;598:5;594:16;640:3;631:6;626:3;622:16;619:25;616:2;;;657:1;654;647:12;616:2;667:41;701:6;696:3;691;667:41;;;334:380;;;;;;;;722:239;;825:2;813:9;804:7;800:23;796:32;793:2;;;841:1;838;831:12;793:2;876:1;893:52;937:7;928:6;917:9;913:22;893:52;;;883:62;;855:96;787:174;;;;;968:821;;;;;1139:3;1127:9;1118:7;1114:23;1110:33;1107:2;;;1156:1;1153;1146:12;1107:2;1191:1;1208:52;1252:7;1243:6;1232:9;1228:22;1208:52;;;1198:62;;1170:96;1297:2;1315:50;1357:7;1348:6;1337:9;1333:22;1315:50;;;1305:60;;1276:95;1430:2;1419:9;1415:18;1402:32;1454:18;1446:6;1443:30;1440:2;;;1486:1;1483;1476:12;1440:2;1506:63;1561:7;1552:6;1541:9;1537:22;1506:63;;;1496:73;;1381:194;1634:2;1623:9;1619:18;1606:32;1658:18;1650:6;1647:30;1644:2;;;1690:1;1687;1680:12;1644:2;1710:63;1765:7;1756:6;1745:9;1741:22;1710:63;;;1700:73;;1585:194;1101:688;;;;;;;;1796:113;1879:24;1897:5;1879:24;;;1874:3;1867:37;1861:48;;;1916:100;1987:23;2004:5;1987:23;;;1982:3;1975:36;1969:47;;;2023:110;2104:23;2121:5;2104:23;;;2099:3;2092:36;2086:47;;;2140:319;;2238:35;2267:5;2238:35;;;2285:61;2339:6;2334:3;2285:61;;;2278:68;;2351:52;2396:6;2391:3;2384:4;2377:5;2373:16;2351:52;;;2424:29;2446:6;2424:29;;;2419:3;2415:39;2408:46;;2218:241;;;;;;2466:339;;2574:35;2603:5;2574:35;;;2621:71;2685:6;2680:3;2621:71;;;2614:78;;2697:52;2742:6;2737:3;2730:4;2723:5;2719:16;2697:52;;;2770:29;2792:6;2770:29;;;2765:3;2761:39;2754:46;;2554:251;;;;;;2877:2003;;3026:6;3021:3;3017:16;3109:4;3102:5;3098:16;3092:23;3121:61;3176:4;3171:3;3167:14;3153:12;3121:61;;;3048:140;3272:4;3265:5;3261:16;3255:23;3324:3;3318:4;3314:14;3307:4;3302:3;3298:14;3291:38;3344:69;3408:4;3394:12;3344:69;;;3336:77;;3198:227;3509:4;3502:5;3498:16;3492:23;3561:3;3555:4;3551:14;3544:4;3539:3;3535:14;3528:38;3581:69;3645:4;3631:12;3581:69;;;3573:77;;3435:227;3752:4;3745:5;3741:16;3735:23;3804:3;3798:4;3794:14;3787:4;3782:3;3778:14;3771:38;3824:69;3888:4;3874:12;3824:69;;;3816:77;;3672:233;3985:4;3978:5;3974:16;3968:23;4037:3;4031:4;4027:14;4020:4;4015:3;4011:14;4004:38;4057:69;4121:4;4107:12;4057:69;;;4049:77;;3915:223;4223:4;4216:5;4212:16;4206:23;4275:3;4269:4;4265:14;4258:4;4253:3;4249:14;4242:38;4295:69;4359:4;4345:12;4295:69;;;4287:77;;4148:228;4462:4;4455:5;4451:16;4445:23;4514:3;4508:4;4504:14;4497:4;4492:3;4488:14;4481:38;4534:69;4598:4;4584:12;4534:69;;;4526:77;;4386:229;4701:4;4694:5;4690:16;4684:23;4753:3;4747:4;4743:14;4736:4;4731:3;4727:14;4720:38;4773:69;4837:4;4823:12;4773:69;;;4765:77;;4625:229;4871:4;4864:11;;2999:1881;;;;;;4887:213;;5005:2;4994:9;4990:18;4982:26;;5019:71;5087:1;5076:9;5072:17;5063:6;5019:71;;;4976:124;;;;;5107:1551;;5531:3;5520:9;5516:19;5508:27;;5546:69;5612:1;5601:9;5597:17;5588:6;5546:69;;;5663:9;5657:4;5653:20;5648:2;5637:9;5633:18;5626:48;5688:74;5757:4;5748:6;5688:74;;;5680:82;;5810:9;5804:4;5800:20;5795:2;5784:9;5780:18;5773:48;5835:74;5904:4;5895:6;5835:74;;;5827:82;;5957:9;5951:4;5947:20;5942:2;5931:9;5927:18;5920:48;5982:74;6051:4;6042:6;5982:74;;;5974:82;;6105:9;6099:4;6095:20;6089:3;6078:9;6074:19;6067:49;6130:74;6199:4;6190:6;6130:74;;;6122:82;;6253:9;6247:4;6243:20;6237:3;6226:9;6222:19;6215:49;6278:74;6347:4;6338:6;6278:74;;;6270:82;;6401:9;6395:4;6391:20;6385:3;6374:9;6370:19;6363:49;6426:74;6495:4;6486:6;6426:74;;;6418:82;;6549:9;6543:4;6539:20;6533:3;6522:9;6518:19;6511:49;6574:74;6643:4;6634:6;6574:74;;;6566:82;;5502:1156;;;;;;;;;;;;6665:357;;6831:2;6820:9;6816:18;6808:26;;6881:9;6875:4;6871:20;6867:1;6856:9;6852:17;6845:47;6906:106;7007:4;6998:6;6906:106;;;6898:114;;6802:220;;;;;7029:256;;7091:2;7085:9;7075:19;;7129:4;7121:6;7117:17;7228:6;7216:10;7213:22;7192:18;7180:10;7177:34;7174:62;7171:2;;;7249:1;7246;7239:12;7171:2;7269:10;7265:2;7258:22;7069:216;;;;;7292:322;;7436:18;7428:6;7425:30;7422:2;;;7468:1;7465;7458:12;7422:2;7535:4;7531:9;7524:4;7516:6;7512:17;7508:33;7500:41;;7599:4;7593;7589:15;7581:23;;7359:255;;;;7621:118;;7711:5;7705:12;7695:22;;7676:63;;;;7747:153;;7852:6;7847:3;7840:19;7889:4;7884:3;7880:14;7865:29;;7833:67;;;;;7909:163;;8024:6;8019:3;8012:19;8061:4;8056:3;8052:14;8037:29;;8005:67;;;;;8080:91;;8142:24;8160:5;8142:24;;;8131:35;;8125:46;;;;8178:85;;8251:5;8244:13;8237:21;8226:32;;8220:43;;;;8270:71;;8331:5;8320:16;;8314:27;;;;8348:121;;8421:42;8414:5;8410:54;8399:65;;8393:76;;;;8477:145;8558:6;8553:3;8548;8535:30;8614:1;8605:6;8600:3;8596:16;8589:27;8528:94;;;;8631:268;8696:1;8703:101;8717:6;8714:1;8711:13;8703:101;;;8793:1;8788:3;8784:11;8778:18;8774:1;8769:3;8765:11;8758:39;8739:2;8736:1;8732:10;8727:15;;8703:101;;;8819:6;8816:1;8813:13;8810:2;;;8884:1;8875:6;8870:3;8866:16;8859:27;8810:2;8680:219;;;;;8907:97;;8995:2;8991:7;8986:2;8979:5;8975:14;8971:28;8961:38;;8955:49;;;;9012:111;9078:21;9093:5;9078:21;;;9071:5;9068:32;9058:2;;9114:1;9111;9104:12;9058:2;9052:71;;9130:115;9198:23;9215:5;9198:23;;;9191:5;9188:34;9178:2;;9236:1;9233;9226:12;9178:2;9172:73;",
  "source": "pragma solidity >=0.4.22 <0.8.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract QualityTest {\r\n    struct Building {\r\n        // Client\r\n        // string clientName;\r\n\r\n        // Building\r\n        int256 id;\r\n        string buildingAddress;\r\n\r\n        // Battery\r\n        string operatingPermit;\r\n\r\n        // Column\r\n        string conformityCertificate;\r\n        string floorServed;\r\n\r\n        // Elevator\r\n        string elevatorDoorTest;\r\n        string elevatorCableTest;\r\n        string elevatorBreakTest;\r\n    }\r\n\r\n\r\n    mapping(int => address) public employee;\r\n    mapping(int => Building) public buildings;\r\n\r\n    constructor() public {\r\n        buildings[1] = Building({\r\n            id: 1,\r\n            buildingAddress: \"725 Lebourgneuf, Lévis, QC\",\r\n\r\n            operatingPermit: \"Not Permit\",\r\n\r\n            conformityCertificate: \"No Certificate\",\r\n            floorServed: \"5\",\r\n\r\n            elevatorDoorTest: \"Not Passed\",\r\n            elevatorCableTest: \"Not Passed\",\r\n            elevatorBreakTest: \"Not Passed\"\r\n        });\r\n    }\r\n\r\n    // function addBuilding(int _id, string[9]) public {\r\n        // buildings[_id].clientName               = string[1];\r\n        // buildings[_id].buildingAddress          = string[2];\r\n        // buildings[_id].operatingPermit          = string[3];\r\n        // buildings[_id].conformityCertificate    = string[4];\r\n        // buildings[_id].floorServed              = string[5];\r\n        // buildings[_id].elevatorDoorTest         = string[6];\r\n        // buildings[_id].elevatorCableTest        = string[7];\r\n        // buildings[_id].elevatorBreakTest        = string[8];\r\n    // }\r\n\r\n    function createContract(int _id, bool isTestPassed, string memory _operatingPermit, string memory _conformityCertificate) public {\r\n        employee[_id] = msg.sender;\r\n        buildings[_id].operatingPermit = _operatingPermit;\r\n        buildings[_id].conformityCertificate = _conformityCertificate;\r\n\r\n        if (isTestPassed) {\r\n            buildings[_id].buildingAddress = \"Passed\";\r\n            buildings[_id].operatingPermit = \"Passed\";\r\n            buildings[_id].elevatorBreakTest = \"Passed\";\r\n        }\r\n    }\r\n\r\n    function getBuilding(int _id) public view returns (Building memory) {\r\n        return buildings[_id];\r\n    }\r\n}\r\n\r\n\r\n    // struct Battery {\r\n    //     string operatingPermit;\r\n    //     Column[2] cols;\r\n    // }\r\n\r\n    // struct Column {\r\n    //     string conformityCertificate;\r\n    //     int256 floorServed;\r\n    //     Elevator[4] elevs;\r\n    // }\r\n\r\n    // struct Elevator {\r\n    //     string productLine;\r\n    //     string doorTest;\r\n    //     string cableTest;\r\n    //     string breakTest;\r\n    // }\r\n\r\n    // struct BuildingAddress {\r\n    //     string buildingName;\r\n    //     string numberStreet;\r\n    //     string city;\r\n    //     string state;\r\n    // }\r\n    \r\n    // struct Building {\r\n    //     int256 id;\r\n    //     BuildingAddress addr;\r\n    //     Battery[1] bats;\r\n    // }",
  "sourcePath": "C:/Users/ricol/Documents/repo codeboxx/week-12/team-project/Rocket_Elevators_Smart_Contracts/contracts/QualityTest.sol",
  "ast": {
    "absolutePath": "/C/Users/ricol/Documents/repo codeboxx/week-12/team-project/Rocket_Elevators_Smart_Contracts/contracts/QualityTest.sol",
    "exportedSymbols": {
      "QualityTest": [
        194
      ]
    },
    "id": 195,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 79,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 80,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 194,
        "linearizedBaseContracts": [
          194
        ],
        "name": "QualityTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "QualityTest.Building",
            "id": 97,
            "members": [
              {
                "constant": false,
                "id": 82,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "199:9:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 81,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "199:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "name": "buildingAddress",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "219:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 83,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "219:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "name": "operatingPermit",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "274:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 85,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "274:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "name": "conformityCertificate",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "328:28:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 87,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "328:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 90,
                "name": "floorServed",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "367:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 89,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "367:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 92,
                "name": "elevatorDoorTest",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "419:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 91,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "419:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 94,
                "name": "elevatorCableTest",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "453:24:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 93,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "453:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 96,
                "name": "elevatorBreakTest",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "488:24:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 95,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "488:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Building",
            "nodeType": "StructDefinition",
            "scope": 194,
            "src": "99:421:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 101,
            "name": "employee",
            "nodeType": "VariableDeclaration",
            "scope": 194,
            "src": "530:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_int256_$_t_address_$",
              "typeString": "mapping(int256 => address)"
            },
            "typeName": {
              "id": 100,
              "keyType": {
                "id": 98,
                "name": "int",
                "nodeType": "ElementaryTypeName",
                "src": "538:3:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              },
              "nodeType": "Mapping",
              "src": "530:23:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_int256_$_t_address_$",
                "typeString": "mapping(int256 => address)"
              },
              "valueType": {
                "id": 99,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "545:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 105,
            "name": "buildings",
            "nodeType": "VariableDeclaration",
            "scope": 194,
            "src": "576:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
              "typeString": "mapping(int256 => struct QualityTest.Building)"
            },
            "typeName": {
              "id": 104,
              "keyType": {
                "id": 102,
                "name": "int",
                "nodeType": "ElementaryTypeName",
                "src": "584:3:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              },
              "nodeType": "Mapping",
              "src": "576:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                "typeString": "mapping(int256 => struct QualityTest.Building)"
              },
              "valueType": {
                "contractScope": null,
                "id": 103,
                "name": "Building",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 97,
                "src": "591:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Building_$97_storage_ptr",
                  "typeString": "struct QualityTest.Building"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "647:408:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 108,
                        "name": "buildings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "658:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                          "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                        }
                      },
                      "id": 110,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "668:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "658:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Building_$97_storage",
                        "typeString": "struct QualityTest.Building storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "701:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "373235204c65626f7572676e6575662c204cc3a97669732c205143",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "734:29:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_43ebbac55a4c49250f2adfbdd2ae3793bf95cb35b2474564a613f79560ddef8d",
                            "typeString": "literal_string \"725 Lebourgneuf, Lévis, QC\""
                          },
                          "value": "725 Lebourgneuf, Lévis, QC"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4e6f74205065726d6974",
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "797:12:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_28e8ef4b09e33de351edec9cf2653b76431a2d5379e9d1ffe4b0005c4bce3a6c",
                            "typeString": "literal_string \"Not Permit\""
                          },
                          "value": "Not Permit"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4e6f204365727469666963617465",
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "849:16:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_582be709003281b0ecd473c78489e77e1f1304aacabce2b2cfacfece06723d5b",
                            "typeString": "literal_string \"No Certificate\""
                          },
                          "value": "No Certificate"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "893:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1",
                            "typeString": "literal_string \"5\""
                          },
                          "value": "5"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4e6f7420506173736564",
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "931:12:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          },
                          "value": "Not Passed"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4e6f7420506173736564",
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "977:12:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          },
                          "value": "Not Passed"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4e6f7420506173736564",
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1023:12:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          },
                          "value": "Not Passed"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_43ebbac55a4c49250f2adfbdd2ae3793bf95cb35b2474564a613f79560ddef8d",
                            "typeString": "literal_string \"725 Lebourgneuf, Lévis, QC\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_28e8ef4b09e33de351edec9cf2653b76431a2d5379e9d1ffe4b0005c4bce3a6c",
                            "typeString": "literal_string \"Not Permit\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_582be709003281b0ecd473c78489e77e1f1304aacabce2b2cfacfece06723d5b",
                            "typeString": "literal_string \"No Certificate\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1",
                            "typeString": "literal_string \"5\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          }
                        ],
                        "id": 111,
                        "name": "Building",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "673:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Building_$97_storage_ptr_$",
                          "typeString": "type(struct QualityTest.Building storage pointer)"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "id",
                        "buildingAddress",
                        "operatingPermit",
                        "conformityCertificate",
                        "floorServed",
                        "elevatorDoorTest",
                        "elevatorCableTest",
                        "elevatorBreakTest"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "673:374:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Building_$97_memory",
                        "typeString": "struct QualityTest.Building memory"
                      }
                    },
                    "src": "658:389:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Building_$97_storage",
                      "typeString": "struct QualityTest.Building storage ref"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "658:389:3"
                }
              ]
            },
            "documentation": null,
            "id": 124,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "637:2:3"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:0:3"
            },
            "scope": 194,
            "src": "626:429:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1782:389:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "employee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "1793:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int256_$_t_address_$",
                          "typeString": "mapping(int256 => address)"
                        }
                      },
                      "id": 137,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1802:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1793:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "1809:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1809:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1793:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 142,
                          "name": "buildings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1830:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                            "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                          }
                        },
                        "id": 144,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 143,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "1840:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1830:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Building_$97_storage",
                          "typeString": "struct QualityTest.Building storage ref"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "operatingPermit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "1830:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 146,
                      "name": "_operatingPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "1863:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1830:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:49:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 149,
                          "name": "buildings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1890:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                            "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                          }
                        },
                        "id": 151,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 150,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "1900:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1890:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Building_$97_storage",
                          "typeString": "struct QualityTest.Building storage ref"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "conformityCertificate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "1890:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 153,
                      "name": "_conformityCertificate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "1929:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1890:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1890:61:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 156,
                    "name": "isTestPassed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 128,
                    "src": "1968:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 179,
                  "nodeType": "IfStatement",
                  "src": "1964:200:3",
                  "trueBody": {
                    "id": 178,
                    "nodeType": "Block",
                    "src": "1982:182:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 157,
                                "name": "buildings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "1997:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                                  "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                                }
                              },
                              "id": 159,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 158,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 126,
                                "src": "2007:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1997:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Building_$97_storage",
                                "typeString": "struct QualityTest.Building storage ref"
                              }
                            },
                            "id": 160,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buildingAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 84,
                            "src": "1997:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "506173736564",
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2030:8:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bed6572eec767bc2f21efcdf6ff789a583d373cbf4dea48d812dc785b929cd40",
                              "typeString": "literal_string \"Passed\""
                            },
                            "value": "Passed"
                          },
                          "src": "1997:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 163,
                        "nodeType": "ExpressionStatement",
                        "src": "1997:41:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 164,
                                "name": "buildings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "2053:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                                  "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                                }
                              },
                              "id": 166,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 165,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 126,
                                "src": "2063:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2053:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Building_$97_storage",
                                "typeString": "struct QualityTest.Building storage ref"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "operatingPermit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86,
                            "src": "2053:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "506173736564",
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2086:8:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bed6572eec767bc2f21efcdf6ff789a583d373cbf4dea48d812dc785b929cd40",
                              "typeString": "literal_string \"Passed\""
                            },
                            "value": "Passed"
                          },
                          "src": "2053:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "2053:41:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 171,
                                "name": "buildings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "2109:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                                  "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                                }
                              },
                              "id": 173,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 172,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 126,
                                "src": "2119:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2109:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Building_$97_storage",
                                "typeString": "struct QualityTest.Building storage ref"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "elevatorBreakTest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 96,
                            "src": "2109:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "506173736564",
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2144:8:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bed6572eec767bc2f21efcdf6ff789a583d373cbf4dea48d812dc785b929cd40",
                              "typeString": "literal_string \"Passed\""
                            },
                            "value": "Passed"
                          },
                          "src": "2109:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 177,
                        "nodeType": "ExpressionStatement",
                        "src": "2109:43:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1677:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "name": "isTestPassed",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1686:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "name": "_operatingPermit",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1705:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "name": "_conformityCertificate",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1737:36:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1737:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1676:98:3"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1782:0:3"
            },
            "scope": 194,
            "src": "1653:518:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2247:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 188,
                      "name": "buildings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "2265:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                        "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                      }
                    },
                    "id": 190,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 189,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "2275:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2265:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Building_$97_storage",
                      "typeString": "struct QualityTest.Building storage ref"
                    }
                  },
                  "functionReturnParameters": 187,
                  "id": 191,
                  "nodeType": "Return",
                  "src": "2258:21:3"
                }
              ]
            },
            "documentation": null,
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBuilding",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2200:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2199:9:3"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2230:15:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Building_$97_memory_ptr",
                    "typeString": "struct QualityTest.Building"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 185,
                    "name": "Building",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 97,
                    "src": "2230:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Building_$97_storage_ptr",
                      "typeString": "struct QualityTest.Building"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2229:17:3"
            },
            "scope": 194,
            "src": "2179:108:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 195,
        "src": "71:2219:3"
      }
    ],
    "src": "0:2983:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/ricol/Documents/repo codeboxx/week-12/team-project/Rocket_Elevators_Smart_Contracts/contracts/QualityTest.sol",
    "exportedSymbols": {
      "QualityTest": [
        194
      ]
    },
    "id": 195,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 79,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 80,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 194,
        "linearizedBaseContracts": [
          194
        ],
        "name": "QualityTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "QualityTest.Building",
            "id": 97,
            "members": [
              {
                "constant": false,
                "id": 82,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "199:9:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 81,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "199:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "name": "buildingAddress",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "219:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 83,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "219:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "name": "operatingPermit",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "274:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 85,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "274:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "name": "conformityCertificate",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "328:28:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 87,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "328:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 90,
                "name": "floorServed",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "367:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 89,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "367:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 92,
                "name": "elevatorDoorTest",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "419:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 91,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "419:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 94,
                "name": "elevatorCableTest",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "453:24:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 93,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "453:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 96,
                "name": "elevatorBreakTest",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "488:24:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 95,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "488:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Building",
            "nodeType": "StructDefinition",
            "scope": 194,
            "src": "99:421:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 101,
            "name": "employee",
            "nodeType": "VariableDeclaration",
            "scope": 194,
            "src": "530:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_int256_$_t_address_$",
              "typeString": "mapping(int256 => address)"
            },
            "typeName": {
              "id": 100,
              "keyType": {
                "id": 98,
                "name": "int",
                "nodeType": "ElementaryTypeName",
                "src": "538:3:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              },
              "nodeType": "Mapping",
              "src": "530:23:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_int256_$_t_address_$",
                "typeString": "mapping(int256 => address)"
              },
              "valueType": {
                "id": 99,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "545:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 105,
            "name": "buildings",
            "nodeType": "VariableDeclaration",
            "scope": 194,
            "src": "576:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
              "typeString": "mapping(int256 => struct QualityTest.Building)"
            },
            "typeName": {
              "id": 104,
              "keyType": {
                "id": 102,
                "name": "int",
                "nodeType": "ElementaryTypeName",
                "src": "584:3:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              },
              "nodeType": "Mapping",
              "src": "576:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                "typeString": "mapping(int256 => struct QualityTest.Building)"
              },
              "valueType": {
                "contractScope": null,
                "id": 103,
                "name": "Building",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 97,
                "src": "591:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Building_$97_storage_ptr",
                  "typeString": "struct QualityTest.Building"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "647:408:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 108,
                        "name": "buildings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "658:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                          "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                        }
                      },
                      "id": 110,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "668:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "658:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Building_$97_storage",
                        "typeString": "struct QualityTest.Building storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "701:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "373235204c65626f7572676e6575662c204cc3a97669732c205143",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "734:29:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_43ebbac55a4c49250f2adfbdd2ae3793bf95cb35b2474564a613f79560ddef8d",
                            "typeString": "literal_string \"725 Lebourgneuf, Lévis, QC\""
                          },
                          "value": "725 Lebourgneuf, Lévis, QC"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4e6f74205065726d6974",
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "797:12:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_28e8ef4b09e33de351edec9cf2653b76431a2d5379e9d1ffe4b0005c4bce3a6c",
                            "typeString": "literal_string \"Not Permit\""
                          },
                          "value": "Not Permit"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4e6f204365727469666963617465",
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "849:16:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_582be709003281b0ecd473c78489e77e1f1304aacabce2b2cfacfece06723d5b",
                            "typeString": "literal_string \"No Certificate\""
                          },
                          "value": "No Certificate"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "893:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1",
                            "typeString": "literal_string \"5\""
                          },
                          "value": "5"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4e6f7420506173736564",
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "931:12:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          },
                          "value": "Not Passed"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4e6f7420506173736564",
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "977:12:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          },
                          "value": "Not Passed"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4e6f7420506173736564",
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1023:12:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          },
                          "value": "Not Passed"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_43ebbac55a4c49250f2adfbdd2ae3793bf95cb35b2474564a613f79560ddef8d",
                            "typeString": "literal_string \"725 Lebourgneuf, Lévis, QC\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_28e8ef4b09e33de351edec9cf2653b76431a2d5379e9d1ffe4b0005c4bce3a6c",
                            "typeString": "literal_string \"Not Permit\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_582be709003281b0ecd473c78489e77e1f1304aacabce2b2cfacfece06723d5b",
                            "typeString": "literal_string \"No Certificate\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1",
                            "typeString": "literal_string \"5\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6350a3273d52840584c9ea4093f2f5b993e56969f2739c0e295463c184fb9f34",
                            "typeString": "literal_string \"Not Passed\""
                          }
                        ],
                        "id": 111,
                        "name": "Building",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "673:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Building_$97_storage_ptr_$",
                          "typeString": "type(struct QualityTest.Building storage pointer)"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "id",
                        "buildingAddress",
                        "operatingPermit",
                        "conformityCertificate",
                        "floorServed",
                        "elevatorDoorTest",
                        "elevatorCableTest",
                        "elevatorBreakTest"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "673:374:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Building_$97_memory",
                        "typeString": "struct QualityTest.Building memory"
                      }
                    },
                    "src": "658:389:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Building_$97_storage",
                      "typeString": "struct QualityTest.Building storage ref"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "658:389:3"
                }
              ]
            },
            "documentation": null,
            "id": 124,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "637:2:3"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:0:3"
            },
            "scope": 194,
            "src": "626:429:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1782:389:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "employee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "1793:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int256_$_t_address_$",
                          "typeString": "mapping(int256 => address)"
                        }
                      },
                      "id": 137,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1802:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1793:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "1809:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1809:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1793:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 142,
                          "name": "buildings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1830:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                            "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                          }
                        },
                        "id": 144,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 143,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "1840:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1830:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Building_$97_storage",
                          "typeString": "struct QualityTest.Building storage ref"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "operatingPermit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "1830:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 146,
                      "name": "_operatingPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "1863:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1830:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:49:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 149,
                          "name": "buildings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1890:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                            "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                          }
                        },
                        "id": 151,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 150,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "1900:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1890:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Building_$97_storage",
                          "typeString": "struct QualityTest.Building storage ref"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "conformityCertificate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "1890:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 153,
                      "name": "_conformityCertificate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "1929:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1890:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1890:61:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 156,
                    "name": "isTestPassed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 128,
                    "src": "1968:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 179,
                  "nodeType": "IfStatement",
                  "src": "1964:200:3",
                  "trueBody": {
                    "id": 178,
                    "nodeType": "Block",
                    "src": "1982:182:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 157,
                                "name": "buildings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "1997:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                                  "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                                }
                              },
                              "id": 159,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 158,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 126,
                                "src": "2007:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1997:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Building_$97_storage",
                                "typeString": "struct QualityTest.Building storage ref"
                              }
                            },
                            "id": 160,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buildingAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 84,
                            "src": "1997:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "506173736564",
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2030:8:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bed6572eec767bc2f21efcdf6ff789a583d373cbf4dea48d812dc785b929cd40",
                              "typeString": "literal_string \"Passed\""
                            },
                            "value": "Passed"
                          },
                          "src": "1997:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 163,
                        "nodeType": "ExpressionStatement",
                        "src": "1997:41:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 164,
                                "name": "buildings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "2053:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                                  "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                                }
                              },
                              "id": 166,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 165,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 126,
                                "src": "2063:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2053:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Building_$97_storage",
                                "typeString": "struct QualityTest.Building storage ref"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "operatingPermit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86,
                            "src": "2053:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "506173736564",
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2086:8:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bed6572eec767bc2f21efcdf6ff789a583d373cbf4dea48d812dc785b929cd40",
                              "typeString": "literal_string \"Passed\""
                            },
                            "value": "Passed"
                          },
                          "src": "2053:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "2053:41:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 171,
                                "name": "buildings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "2109:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                                  "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                                }
                              },
                              "id": 173,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 172,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 126,
                                "src": "2119:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2109:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Building_$97_storage",
                                "typeString": "struct QualityTest.Building storage ref"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "elevatorBreakTest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 96,
                            "src": "2109:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "506173736564",
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2144:8:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bed6572eec767bc2f21efcdf6ff789a583d373cbf4dea48d812dc785b929cd40",
                              "typeString": "literal_string \"Passed\""
                            },
                            "value": "Passed"
                          },
                          "src": "2109:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 177,
                        "nodeType": "ExpressionStatement",
                        "src": "2109:43:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1677:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "name": "isTestPassed",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1686:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "name": "_operatingPermit",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1705:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "name": "_conformityCertificate",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1737:36:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1737:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1676:98:3"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1782:0:3"
            },
            "scope": 194,
            "src": "1653:518:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2247:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 188,
                      "name": "buildings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "2265:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_Building_$97_storage_$",
                        "typeString": "mapping(int256 => struct QualityTest.Building storage ref)"
                      }
                    },
                    "id": 190,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 189,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "2275:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2265:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Building_$97_storage",
                      "typeString": "struct QualityTest.Building storage ref"
                    }
                  },
                  "functionReturnParameters": 187,
                  "id": 191,
                  "nodeType": "Return",
                  "src": "2258:21:3"
                }
              ]
            },
            "documentation": null,
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBuilding",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2200:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2199:9:3"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2230:15:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Building_$97_memory_ptr",
                    "typeString": "struct QualityTest.Building"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 185,
                    "name": "Building",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 97,
                    "src": "2230:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Building_$97_storage_ptr",
                      "typeString": "struct QualityTest.Building"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2229:17:3"
            },
            "scope": 194,
            "src": "2179:108:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 195,
        "src": "71:2219:3"
      }
    ],
    "src": "0:2983:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x21f88c2cCE47F1D6aB2460ccdD6b54921feEa014",
      "transactionHash": "0x1d71061e60fe3f6e6e36408b41f29540ad230c9363e1a66f5eb5163d454ed62b"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-08T14:04:53.548Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}